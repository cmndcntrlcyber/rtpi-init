version: '3.8'

services:
  # Kasm Workspaces
  kasm_db:
    container_name: kasm_db
    image: postgres:12
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: kasmdb_password
      POSTGRES_USER: kasmdb
      POSTGRES_DB: kasm
    volumes:
      - kasm_db_data:/var/lib/postgresql/data
    networks:
      - kasm_network

  kasm:
    container_name: kasm
    image: kasmweb/kasm:${KASM_VERSION:-latest}
    restart: unless-stopped
    environment:
      - PUBLIC_IP=${PUBLIC_IP:-127.0.0.1}
      - DB_HOST=kasm_db
      - DB_NAME=kasm
      - DB_USER=kasmdb
      - DB_PASS=kasmdb_password
      - KASM_PORT=${KASM_PORT:-443}
      - DB_PORT=5432
    ports:
      - "${KASM_PORT:-443}:443"
    volumes:
      - /dev/shm:/dev/shm
      - kasm_profiles:/profiles
      - kasm_data:/opt/kasm/current/data
    depends_on:
      - kasm_db
    networks:
      - kasm_network

  # Portainer
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    ports:
      - "${PORTAINER_PORT:-9000}:9000"
    networks:
      - portainer_network

  # Evilginx2
  evilginx2:
    container_name: evilginx2
    build:
      context: ./evilginx2
      dockerfile: Dockerfile
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - evilginx2_data:/root/.evilginx
    networks:
      - hack_network

  # Gophish
  gophish:
    container_name: gophish
    build:
      context: ./gophish
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "${GOPHISH_ADMIN_PORT:-3333}:3333"
      - "${GOPHISH_PHISH_PORT:-8080}:8080"
    volumes:
      - gophish_data:/opt/gophish/data
    networks:
      - hack_network

  # Axiom (as a service)
  axiom:
    container_name: axiom
    image: ubuntu:20.04
    platform: linux/amd64
    restart: unless-stopped
    command: >
      bash -c "apt update && apt install -y git curl sudo golang wget zip unzip lsb-release && 
      git clone https://github.com/pry0cc/axiom ~/.axiom/ && cd && 
      chmod +x ~/.axiom/interact/axiom-configure && ~/.axiom/interact/axiom-configure --docker && 
      tail -f /dev/null"
    volumes:
      - axiom_data:/root/.axiom
    networks:
      - hack_network

networks:
  kasm_network:
    driver: bridge
  portainer_network:
    driver: bridge
  hack_network:
    driver: bridge

volumes:
  kasm_db_data:
  kasm_profiles:
  kasm_data:
  portainer_data:
  evilginx2_data:
  gophish_data:
  axiom_data: