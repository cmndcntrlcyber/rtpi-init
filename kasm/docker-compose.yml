version: '3.8'

services:
  kasm_agent:
    image: kasmweb/agent:${KASM_VERSION:-1.15.0}
    container_name: kasm_agent
    restart: unless-stopped
    networks:
      kasm_default_network:
        ipv4_address: 10.11.0.3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - kasm_db_1.15.0:/data

  kasm_api:
    image: kasmweb/api:${KASM_VERSION:-1.15.0}
    container_name: kasm_api
    restart: unless-stopped
    networks:
      kasm_default_network:
        ipv4_address: 10.11.0.5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - DB_HOST=${DB_HOST:-kasm_db}
      - DB_NAME=${DB_NAME:-kasm}
      - DB_USER=${DB_USER:-kasmdb}
      - DB_PASS=${DB_PASS:-kasmdb_password}
      - DB_PORT=${DB_PORT:-5432}

  kasm_db:
    image: postgres:12-alpine
    container_name: kasm_db
    restart: unless-stopped
    networks:
      kasm_default_network:
        ipv4_address: 10.11.0.4
      kasm_network: {}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - kasm_db_1.15.0:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER:-kasmdb}
      - POSTGRES_PASSWORD=${DB_PASS:-kasmdb_password}
      - POSTGRES_DB=${DB_NAME:-kasm}

  kasm_guac:
    image: kasmweb/kasm-guac:${KASM_VERSION:-1.15.0}
    container_name: kasm_guac
    restart: unless-stopped
    networks:
      kasm_default_network:
        ipv4_address: 10.11.0.9
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  kasm_manager:
    image: kasmweb/manager:${KASM_VERSION:-1.15.0}
    container_name: kasm_manager
    restart: unless-stopped
    networks:
      kasm_default_network:
        ipv4_address: 10.11.0.7
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  kasm_proxy:
    image: kasmweb/nginx:1.25.3
    container_name: kasm_proxy
    restart: unless-stopped
    networks:
      kasm_default_network:
        ipv4_address: 10.11.0.2
      kasm_network: {}
    ports:
      - "${KASM_PORT:-443}:443"
    depends_on:
      - kasm_api
      - kasm_manager

  kasm_redis:
    image: redis:5-alpine
    container_name: kasm_redis
    restart: unless-stopped
    networks:
      kasm_default_network:
        ipv4_address: 10.11.0.6
    command: redis-server --appendonly yes

  kasm_share:
    image: kasmweb/share:${KASM_VERSION:-1.15.0}
    container_name: kasm_share
    restart: unless-stopped
    networks:
      kasm_default_network:
        ipv4_address: 10.11.0.8
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  kasm_default_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.11.0.0/24
  kasm_network:
    driver: bridge

volumes:
  kasm_db_1.15.0:
